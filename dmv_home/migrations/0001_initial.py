# Generated by Django 3.2.21 on 2023-10-22 15:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fsm
import dmv_home.models.user
import dmv_home.models.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('country', models.CharField(max_length=255, verbose_name='Country')),
                ('language', models.CharField(max_length=255, verbose_name='Language')),
                ('about', models.TextField(blank=True, null=True, verbose_name='About Me')),
                ('is_active', models.BooleanField(default=False, verbose_name='Custom Active')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Custom Superuser')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Created Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('status', django_fsm.FSMField(choices=[('unactivated', 'unactivated'), ('activated', 'activated'), ('deactivated', 'deactivated')], default=dmv_home.models.utils.UserStatusEnum['unactivated'], max_length=50, protected=True, verbose_name='User Status')),
                ('image', models.ImageField(blank=True, null=True, upload_to=dmv_home.models.utils.path_and_rename, validators=[dmv_home.models.utils.validate_image], verbose_name='Profile Image')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', dmv_home.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('prefix', models.CharField(max_length=16, verbose_name='Internal Prefix')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('activated', models.BooleanField(default=False, verbose_name='Activated')),
                ('quantity', models.IntegerField(default=0, verbose_name='Quantity')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Created Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('status', django_fsm.FSMField(choices=[('unactivated', 'unactivated'), ('activated', 'activated'), ('deactivated', 'deactivated')], default=dmv_home.models.utils.OrganizationStatusEnum['unactivated'], max_length=50, protected=True, verbose_name='Organization Status')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=dmv_home.models.utils.path_and_rename, validators=[dmv_home.models.utils.validate_image], verbose_name='Organization Logo')),
            ],
            options={
                'ordering': ('-pk',),
                'permissions': (('org_4', 'View Permission'), ('org_6', 'Full Permission')),
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Created Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=dmv_home.models.utils.path_and_rename, validators=[dmv_home.models.utils.validate_image], verbose_name='Team Logo')),
                ('status', django_fsm.FSMField(choices=[('unactivated', 'unactivated'), ('activated', 'activated'), ('deactivated', 'deactivated')], default=dmv_home.models.utils.TeamStatusEnum['unactivated'], max_length=50, protected=True, verbose_name='Team Status')),
                ('members', models.ManyToManyField(blank=True, related_name='teams', to=settings.AUTH_USER_MODEL, verbose_name='Members')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='dmv_home.organization', verbose_name='Organization')),
            ],
            options={
                'ordering': ('-pk',),
                'permissions': (('level_1', 'View Permission'), ('level_2', 'Edit Permission'), ('level_3', 'Change Permission'), ('level_4', 'Full Permission')),
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_role', models.CharField(choices=[('level_1', 'level_1'), ('level_2', 'level_2'), ('level_3', 'level_3'), ('level_4', 'level_4')], default='level_1', max_length=7)),
                ('all_teams', models.BooleanField(default=False, verbose_name='Invite All Teams')),
                ('invitee_email', models.EmailField(max_length=254, verbose_name='Email Address')),
                ('status', django_fsm.FSMField(choices=[('drafted', 'drafted'), ('submitted', 'submitted'), ('cancelled', 'cancelled'), ('rejected', 'rejected'), ('accepted', 'accepted')], default=dmv_home.models.utils.InvitationStatusEnum['drafted'], max_length=50, protected=True, verbose_name='Invitation Status')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Create')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Updated')),
                ('invitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to=settings.AUTH_USER_MODEL, verbose_name='Invitor')),
                ('traget_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='dmv_home.team', verbose_name='Target Team')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='dmv_home.organization', verbose_name='Organization'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
